name: CI
on:
  push:
    branches: [main]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    name: ${{ matrix.PYTHON_VERSION }} ${{ matrix.POLARS_VERSION }}
    timeout-minutes: 15
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - { PYTHON_VERSION: 'python=3.9', POLARS_VERSION: 'polars=0.14.28' }
          - { PYTHON_VERSION: 'python=3.9', POLARS_VERSION: 'polars=0.15' }
          - { PYTHON_VERSION: 'python=3.9', POLARS_VERSION: 'polars=0.16' }
          - { PYTHON_VERSION: 'python=3.9', POLARS_VERSION: 'polars=0.17' }
          - { PYTHON_VERSION: 'python=3.9', POLARS_VERSION: 'polars=0.18' }
          - { PYTHON_VERSION: 'python=3.9', POLARS_VERSION: 'polars=0.19' }
          - { PYTHON_VERSION: 'python=3.9', POLARS_VERSION: 'polars=0.20' }
          - { PYTHON_VERSION: 'python=3.10', POLARS_VERSION: '' }
          - { PYTHON_VERSION: 'python=3.11', POLARS_VERSION: '' }
          - { PYTHON_VERSION: 'python=3.12', POLARS_VERSION: '' }
    steps:
      - uses: actions/checkout@v4
      - uses: prefix-dev/setup-pixi@v0.4.3
        with:
          run-install: false
      - name: Install dependencies
        # TODO: make prettier once there are feature flags
        # https://github.com/prefix-dev/pixi/issues/239
        run: |
          pixi add ${{ matrix.PYTHON_VERSION }} ${{ matrix.POLARS_VERSION }}
          pixi install
          pixi run postinstall
      - name: Run unittests
        uses: pavelzw/pytest-action@510c5e90c360a185039bea56ce8b3e7e51a16507
        with:
          custom-pytest: pixi run pytest
          report-title: ${{ matrix.PYTHON_VERSION }} ${{ matrix.POLARS_VERSION }}

  pre-commit-checks:
    # TODO: switch to pixi once there is a good way
    name: pre-commit
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4
      - name: Run pre-commit
        uses: quantco/pre-commit-conda@v1

  lint-workflow-files:
    name: Lint workflow files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4
      # https://github.com/rhysd/actionlint/blob/main/docs/usage.md#use-actionlint-on-github-actions
      - name: Download actionlint
        id: get_actionlint
        run: bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash)
      - name: Check workflow files
        run: ${{ steps.get_actionlint.outputs.executable }} -color
